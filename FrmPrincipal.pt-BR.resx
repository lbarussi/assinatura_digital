<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>415, 273</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AADx3tIA8d7SAPHe0gDx3tIA8d7SAPPj2ADWqY1hx4NZ3ciFW+DToYNv9eLYAPXh1QD04NUA9ODVAPTg
        1QD04NUA3LihAN26owDduqQA3bqkAN67pgDZs5sYvHNF9LxwQ/+2a0H/t2s//tSmiyTZsZkA2K+WANev
        lgDWrJIA1qySAOTFsgDPnX8AzZl7AM2YegDOmXsAyJBvLrdqOf2tXCr/pFAg/69eMP+zZjk6smY4ALJm
        OACyZjgAvn1WANOmigDt1cYAz55/AMOCWwDMlncAzZd5AMiObSy4bDv7rl4u/6ZSIf+wYDH/s2U4OLJk
        NgCxYjQAtmo8ANOkhwDgvqkA7NPDANCggQC2aDcAvXhNAM6afADIkG8suGw7/K5eL/+mUiH/r2Ax/7Nm
        OTiyZTcAsWIxALdqOQDSo4YA3rulAOzTwwDRoYQAt2o6ALBcJgC+eU4AyZBwIrltPveuXjH8pVEh/LBg
        M/yzZzkusmIxALJfKwC3ajgA06WIAN67pQDu18gAzZl6IrhtPkG1ZTNCtWQyQr12S029dEiBt2xBg7Rn
        OoO5b0ODuGw/ULVmNEK1ZTRCuGw9Qc6bfCbgvqkA1qqQXsB4TPLIhFn/yIRZ/8iEWf/Hglb/yINX/ciE
        WfzJhFn8yINY/MiDWP/IhFn/yIRZ/8mEWf/BeU32y5h5bqxfM+GsWiz/rV0v/61dL/+tXS//rV0v/61d
        L/+tXS//rV0v/61dL/+tXS//rV0v/61dL/+tXS//rFwu/6laLOquYzjTplIj/6tbLf+rWiz/q1os/6ta
        LP+qWiz/q1os/6taLP+rWiz/q1os/6taLP+qWiz/q1st/6dUJv+qXC/f1aiNPMaFXtLapIDw2aR/8dmj
        f/HZon3x2qSA6tmkgOLZpIDj2qR/6dmhfPHapH/x2aR/8dqlgPDIiWLY0aSLSeTBqwDVpooF0p9+GNKa
        eBnRmncY1qSFFtGcez3LjmmkyYtkqdSjhUXYq44V0Zl2GNKaeBjTn34Yz51/COLEswDivqcA1qiMANGc
        egDPlnIA1aWHANqwmBGxZjzZsmQ2/7NkNv+xaD3k3rynGtyymADRmngA0px6ANCegQDgwK4A4r6nANan
        igDRnHoA1qaJAN21nQDKlHVJo08f/6hXKf+pVyn/o08f/7dyS1/EimgAwYFcAM+YdgDQnoAA4MCuAOK+
        pwDVpooA3rmhAOLBrQDjwq8A1q2UKcJ+VPzUl27/1Zdu/8SAVf/Tpow34b+qAOC+qQDgvKYA0Z6AAODA
        rQDhvaUA16qOAOrQwADr08MA69LCAOzUxADarZJf3q2N196ujtvXp4lt8NjIAPLazADx2swA8dnKANOj
        hgDgv6wA/D8AAPgfAAD4HwAA+B8AAPgfAAD4HwAAgAEAAAAAAAAAAAAAAAAAAAAAAACAAQAA+B8AAPgf
        AAD4HwAA/D8AAA==
</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.StartPosition" type="System.Windows.Forms.FormStartPosition, System.Windows.Forms">
    <value>CenterScreen</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Hospital Austa - Assinatura Eletrônica</value>
  </data>
</root>